#!/usr/bin/env php
<?php
/**
 * MoeFrame 框架的 maidchan 脚本工具
 * 用于启动开发服务器并处理路由
 * 
 * 使用方法:
 *   php maidchan run               - 在默认地址 0.0.0.0:8000 启动开发服务器
 *   php maidchan run -l 127.0.0.1  - 在指定地址 127.0.0.1:8000 启动开发服务器
 *   php maidchan run -p 8888       - 在默认地址 0.0.0.0:8888 启动开发服务器
 *   php maidchan run -l 127.0.0.1 -p 8888 - 在指定地址 127.0.0.1:8888 启动开发服务器
 */

// 检查是否在CLI模式下运行
if (php_sapi_name() !== 'cli') {
    die("This script must be run in CLI mode\n");
}

// 初始化MoeFrame框架（用于命令行环境）
function initializeMoeFrame() {
    // 定义根目录
    $rootDir = dirname(__FILE__);
    
    // 加载框架核心库
    foreach (glob($rootDir . "/lib/*.php") as $filename) {
        require_once $filename;
    }
    
    // 加载应用
    foreach (glob($rootDir . "/app/*.php") as $filename) {
        require_once $filename;
    }
    
    // 创建路由实例
    global $MoeRouter;
    $MoeRouter = new MoeRouter();
    
    // 加载路由配置
    require_once $rootDir . "/conf/route.inc.php";
}

// 解析命令行参数
function parseCommandLineArgs() {
    $shortopts = "l:p:";
    $longopts = ["listen:", "port:"];
    
    $options = getopt($shortopts, $longopts);
    
    // 默认参数
    $args = [
        'listen' => '0.0.0.0',
        'port' => 8000
    ];
    
    // 处理命令行参数
    if (isset($options['l'])) {
        $args['listen'] = $options['l'];
    } elseif (isset($options['listen'])) {
        $args['listen'] = $options['listen'];
    }
    
    if (isset($options['p'])) {
        $args['port'] = intval($options['p']);
    } elseif (isset($options['port'])) {
        $args['port'] = intval($options['port']);
    }
    
    return $args;
}

// 检查端口是否被占用
function checkPort($listen, $port) {
    $socket = @fsockopen($listen, $port, $errno, $errstr, 1);
    if ($socket) {
        fclose($socket);
        return false; // 端口已被占用
    }
    return true; // 端口可用
}

// 启动PHP内置服务器
function startPHPServer($listen, $port) {
    // 检查端口是否可用
    if (!checkPort($listen, $port)) {
        echo "Error: Port {$port} is already in use\n";
        exit(1);
    }
    
    echo "======================================================\n";
    echo "  MoeFrame Development Server (maidchan)\n";
    echo "======================================================\n";
    echo "  Starting server...\n";
    echo "  Listening on http://{$listen}:{$port}\n";
    echo "  Press Ctrl+C to stop the server\n";
    echo "======================================================\n\n";
    
    // 创建路由处理脚本
    $routerScript = dirname(__FILE__) . '/storage/tmp/maidchan_router.php';
    
    // 写入路由处理脚本内容
    $routerContent = <<<EOD
<?php
/**
 * MoeFrame Router Script for PHP Built-in Server
 * This script is automatically generated by maidchan
 */

// 初始化框架路径
\$rootDir = dirname(__FILE__) . '/../..';

// 加载框架核心库
foreach (glob(\$rootDir . "/lib/*.php") as \$filename) {
    require_once \$filename;
}

// 加载应用
foreach (glob(\$rootDir . "/app/*.php") as \$filename) {
    require_once \$filename;
}

// 创建路由实例
\$GLOBALS['MoeRouter'] = new MoeRouter();

// 加载路由配置
require_once \$rootDir . "/conf/route.inc.php";

// 设置HTTP_HOST环境变量，确保路由正确处理
if (!isset(\$_SERVER['HTTP_HOST'])) {
    \$_SERVER['HTTP_HOST'] = '{$listen}:{$port}';
}

// 注意：路由处理已在route.inc.php中完成
// 如果没有匹配的路由，这里会显示404错误
\$MoeApps = new MoeApps();
\$MoeApps->abort(404, '', 'Route Not Found!');
EOD;
    
    // 确保tmp目录存在
    $tmpDir = dirname($routerScript);
    if (!is_dir($tmpDir)) {
        mkdir($tmpDir, 0755, true);
    }
    
    file_put_contents($routerScript, $routerContent);
    
    // 启动PHP内置服务器
    $command = "php -S {$listen}:{$port} {$routerScript}";
    
    echo "  Running command: {$command}\n\n";
    
    // 执行命令并保持运行
    passthru($command);
    
    // 清理路由脚本
    if (file_exists($routerScript)) {
        unlink($routerScript);
    }
}

// 主函数
function main() {
    // 获取命令
    $argv = $_SERVER['argv'];
    
    if (count($argv) < 2) {
        echo "MoeFrame maidchan - Development Helper Tool\n";
        echo "\n";
        echo "Usage: php maidchan <command> [options]\n";
        echo "\n";
        echo "Available commands:\n";
        echo "  run    Start development server\n";
        echo "\n";
        echo "Options for run:\n";
        echo "  -l, --listen    Specify listen address (default: 0.0.0.0)\n";
        echo "  -p, --port      Specify listen port (default: 8000)\n";
        echo "\n";
        echo "Examples:\n";
        echo "  php maidchan run\n";
        echo "  php maidchan run -l 127.0.0.1\n";
        echo "  php maidchan run -p 8888\n";
        echo "  php maidchan run -l 127.0.0.1 -p 8888\n";
        exit(1);
    }
    
    $command = $argv[1];
    
    switch ($command) {
        case 'run':
            $args = parseCommandLineArgs();
            startPHPServer($args['listen'], $args['port']);
            break;
        default:
            echo "Unknown command: {$command}\n";
            echo "Type 'php maidchan' for usage information\n";
            exit(1);
    }
}

// 运行主函数
main();